{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","ws","useEffect","W3CWebSocket","onopen","console","log","readyState","className","onClick","request","JSON","stringify","event_type","company","project","send","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAiDeA,MA7Cf,WACE,IAAIC,EAAK,KAiCT,OAhCAC,qBAAU,YACRD,EAAK,IAAIE,eAAa,oCACnBC,OAAS,WACVC,QAAQC,IAAI,6BACU,IAAlBL,EAAGM,YACLF,QAAQC,IAAI,+BAWf,IAiBD,sBAAKE,UAAU,MAAf,UACE,mDAEA,wBAAQC,QAlBc,WACxB,IAKIC,EAAUC,KAAKC,UALL,CACZC,WAAY,oBACZC,QAAS,cACTC,QAAS,YAGXV,QAAQC,IAAI,uBAAwBL,EAAGM,YAEjB,IAAlBN,EAAGM,YACLN,EAAGe,KAAKN,IAQR,6BACA,+DACA,+DChCSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ef0ad1ca.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nfunction App() {\n  let ws = null;\n  useEffect(() => {\n    ws = new W3CWebSocket(\"ws://localhost:6003/api/chatbot\");\n    ws.onopen = () => {\n      console.log(\"Entered the Open function\");\n      if (ws.readyState === 1) {\n        console.log(\"Connection has been made\");\n        // let message = {\n        //   event_type: \"INIT_CONVERSATION\",\n        //   company: \"vEngage.ai \",\n        //   project: \"cureBay\",\n        // };\n        // let request = JSON.stringify(message);\n        // console.log(\"WebSocket readyState\", ws.readyState);\n        // ws.send(request);\n      }\n    };\n  }, []);\n\n  const sendButtonHandler = () => {\n    let message = {\n      event_type: \"INIT_CONVERSATION\",\n      company: \"vEngage.ai \",\n      project: \"cureBay\",\n    };\n    let request = JSON.stringify(message);\n    console.log(\"WebSocket readyState\", ws.readyState);\n\n    if (ws.readyState === 1) {\n      ws.send(request);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>WebSocket Testing</h1>\n\n      <button onClick={sendButtonHandler}>Initial Message</button>\n      <button>Sending conversation Data</button>\n      <button>Conversation Complete</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}